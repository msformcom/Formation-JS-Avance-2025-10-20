{"version":3,"file":"calculsComplexes.js","sources":["scripts/calculsComplexes.js"],"sourcesContent":["export function calculsCompexesAsync(a, b, callbackProgress) {\n    // Utilisation de Web Worker pour exécuter des calculs complexes en arrière-plan\n    let worker = new Worker(\"/scripts/calcul-complexe.worker.js\");\n    // envoi des données au worker\n    worker.postMessage({ a: a, b: b });\n    //creation d'une promesse pour gérer la réponse asynchrone\n    return new Promise(function (resolve, reject) {\n        // attente des messages du worker\n        worker.addEventListener(\"message\", function (e) {\n            // si progression\n            if (e.data.progress) {\n                //  (document.querySelector(\"#result\")! as HTMLDivElement).innerText=(`Progression : ${e.data.progress}%`);\n                // Le callback de progression sera fourni par le code appelant (facultatif)\n                // s'il est founi, on l'appelle avec la valeur de progression\n                if (callbackProgress) {\n                    callbackProgress(e.data.progress);\n                }\n            }\n            // si résultat\n            if (e.data.result) {\n                resolve(e.data.result);\n            }\n        });\n    });\n}\n;\n"],"names":["calculsCompexesAsync","a","b","callbackProgress","let","worker","Worker","postMessage","Promise","resolve","reject","addEventListener","e","data","progress","result"],"mappings":"AAAO,SAASA,qBAAqBC,EAAGC,EAAGC,GAEvCC,IAAIC,EAAS,IAAIC,OAAO,oCAAoC,EAI5D,OAFAD,EAAOE,YAAY,CAAEN,EAAGA,EAAGC,EAAGA,CAAE,CAAC,EAE1B,IAAIM,QAAQ,SAAUC,EAASC,GAElCL,EAAOM,iBAAiB,UAAW,SAAUC,GAErCA,EAAEC,KAAKC,UAIHX,GACAA,EAAiBS,EAAEC,KAAKC,QAAQ,EAIpCF,EAAEC,KAAKE,QACPN,EAAQG,EAAEC,KAAKE,MAAM,CAE7B,CAAC,CACL,CAAC,CACL,QAxBgBf,oBAyBhB"}